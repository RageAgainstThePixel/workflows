name: build and test
permissions:
  contents: read
on:
  workflow_call:
    inputs:
      matrix:
        required: true
        type: string
    secrets:
      UNITY_USERNAME:
        required: true
      UNITY_PASSWORD:
        required: true
jobs:
  build:
    name: ${{ matrix.name }}
    strategy:
      matrix: ${{ fromJSON(inputs.matrix) }}
      fail-fast: false
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      actions: write
    steps:
      - uses: actions/checkout@v5
      - uses: RageAgainstThePixel/unity-setup@v2
        with:
          unity-version: ${{ matrix.unity-version }}
          build-targets: ${{ matrix.build-target }}
      - uses: RageAgainstThePixel/activate-unity-license@v2
        with:
          license: Personal
          username: ${{ secrets.UNITY_USERNAME }}
          password: ${{ secrets.UNITY_PASSWORD }}
      - uses: RageAgainstThePixel/unity-action@v2
        name: ${{ matrix.build-target }}-Validate
        with:
          log-name: ${{ matrix.build-target }}-Validate
          build-target: ${{ matrix.build-target }}
          args: -quit -nographics -batchmode -executeMethod Utilities.Editor.BuildPipeline.UnityPlayerBuildTools.ValidateProject -importTMProEssentialsAsset
      - uses: RageAgainstThePixel/unity-action@v2
        name: '${{ matrix.build-target }}-Build'
        with:
          log-name: ${{ matrix.build-target }}-Build
          build-target: ${{ matrix.build-target }}
          args: -quit -nographics -batchmode -executeMethod Utilities.Editor.BuildPipeline.UnityPlayerBuildTools.StartCommandLineBuild ${{ matrix.build-args }}
      - uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          compression-level: 0
          retention-days: 1
          name: ${{ github.run_number }}.${{ github.run_attempt }} ${{ matrix.os }} ${{ matrix.unity-version }} ${{ matrix.build-target }} Artifacts
          path: |
            ${{ github.workspace }}/**/*.log
