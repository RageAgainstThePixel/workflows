name: build
permissions:
  contents: read
on:
  workflow_call:
    inputs:
      matrix:
        required: true
        type: string
    secrets:
      UNITY_USERNAME:
        required: true
      UNITY_PASSWORD:
        required: true
jobs:
  build:
    name: ${{ matrix.name }}
    strategy:
      matrix: ${{ fromJSON(inputs.matrix) }}
      fail-fast: false
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    steps:
      - name: Free Disk Space
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.unity-version == '6000.2' }}
        uses: endersonmenezes/free-disk-space@713d134e243b926eba4a5cce0cf608bfd1efb89a # v2.1.1
        with:
          remove_android: true
          remove_dotnet: false
          remove_tool_cache: false
      - uses: actions/checkout@v5
      - uses: RageAgainstThePixel/unity-setup@v2
        with:
          version-file: None
          build-targets: ${{ matrix.build-target }}
          unity-version: ${{ matrix.unity-version }}
      - uses: RageAgainstThePixel/activate-unity-license@v2
        with:
          license: Personal
          username: ${{ secrets.UNITY_USERNAME }}
          password: ${{ secrets.UNITY_PASSWORD }}
      - uses: RageAgainstThePixel/create-unity-project@v1
        id: unity-project
        with:
          project-name: Test Project
      - name: Add Build Pipeline Package
        run: |
          npm install -g openupm-cli
          openupm add com.utilities.buildpipeline
        working-directory: ${{ steps.unity-project.outputs.project-path }}
        shell: bash
      - uses: RageAgainstThePixel/unity-action@v2
        name: ${{ matrix.build-target }}-Validate
        with:
          build-target: ${{ matrix.build-target }}
          project-path: ${{ steps.unity-project.outputs.project-path }}
          log-name: ${{ matrix.build-target }}-Validate
          args: -quit -nographics -batchmode -executeMethod Utilities.Editor.BuildPipeline.UnityPlayerBuildTools.ValidateProject -importTMProEssentialsAsset
      - uses: RageAgainstThePixel/unity-action@v2
        name: ${{ matrix.build-target }}-Build
        with:
          build-target: ${{ matrix.build-target }}
          project-path:  ${{ steps.unity-project.outputs.project-path }}
          log-name: ${{ matrix.build-target }}-Build
          args: -quit -nographics -batchmode -executeMethod Utilities.Editor.BuildPipeline.UnityPlayerBuildTools.StartCommandLineBuild -sceneList Assets/Scenes/SampleScene.unity ${{ matrix.build-args }}
      - uses: actions/upload-artifact@v4
        name: Upload Artifacts
        if: always()
        with:
          name: ${{ github.run_number }}.${{ github.run_attempt }} ${{ matrix.os }} ${{ matrix.unity-version }} ${{ matrix.build-target }} Artifacts
          path: |
            ${{ github.workspace }}/**/*.log
            ${{ github.workspace }}/**/Builds/${{ matrix.build-target }}/
